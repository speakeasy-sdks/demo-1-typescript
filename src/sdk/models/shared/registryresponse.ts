/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ClusterSecretResponse } from "./clustersecretresponse";
import { Expose, Transform } from "class-transformer";

/**
 * Humanitec can be used to manage registry credentials. The Registry object represents how to match credentials to a particular registry.
 *
 * @remarks
 *
 * Humanitec supports all Docker compatible registries as well as the custom authentication formats used by AWS Elastic Container Registry and Google Container Registry. It also supports the injection of a specific secret to be copied from an existing namespace in the cluster.
 */
export class RegistryResponse extends SpeakeasyBase {
  /**
   * The timestamp of when this record was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The user who created this record.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Indicates if registry secrets and credentials should be exposed to CI agents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enable_ci" })
  enableCi: boolean;

  /**
   * Registry ID, unique within the Organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Registry name, usually in a "{domain}" or "{domain}/{project}" format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registry" })
  registry: string;

  /**
   * ClusterSecretsMap stores a list of Kuberenetes secret references for the target deployment clusters.
   */
  @SpeakeasyMetadata({ elemType: ClusterSecretResponse })
  @Expose({ name: "secrets" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ClusterSecretResponse> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ClusterSecretResponse);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  secrets?: Record<string, ClusterSecretResponse>;

  /**
   * Registry type, describes the registry authentication method, and defines the schema for the credentials.
   *
   * @remarks
   *
   * Supported values:
   *
   * - `public`
   *
   * - `basic`
   *
   * - `google_gcr`
   *
   * - `amazon_ecr`
   *
   * - `secret_ref`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}
