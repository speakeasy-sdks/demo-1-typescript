/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventBaseRequest } from "./eventbaserequest";
import { Expose, Type } from "class-transformer";

/**
 * Webhook is a special type of a Job, it performs a HTTPS request to a specified URL with specified headers.
 */
export class WebhookRequest extends SpeakeasyBase {
  /**
   * Defines whether this job is currently disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: Record<string, any>;

  /**
   * Job ID, unique within the Organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  payload?: Record<string, any>;

  /**
   * A list of Events by which the Job is triggered
   */
  @SpeakeasyMetadata({ elemType: EventBaseRequest })
  @Expose({ name: "triggers" })
  @Type(() => EventBaseRequest)
  triggers?: EventBaseRequest[];

  /**
   * Thw webhook's URL (without protocol, only HTTPS is supported)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
