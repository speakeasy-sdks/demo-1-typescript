/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ControllerResponse } from "./controllerresponse";
import { Expose, Transform } from "class-transformer";

/**
 * RuntimeInfo object returned by the runtime endpoint. Represents a list post statuses grouped by modules and controllers (deployments and stateful sets).
 */
export class RuntimeInfoResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ControllerResponse, elemDepth: 2 })
  @Expose({ name: "modules" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, Record<string, ControllerResponse>> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ControllerResponse);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  modules: Record<string, Record<string, ControllerResponse>>;

  @SpeakeasyMetadata()
  @Expose({ name: "namespace" })
  namespace: string;
}
