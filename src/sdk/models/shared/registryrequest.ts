/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountCredsRequest } from "./accountcredsrequest";
import { ClusterSecretRequest } from "./clustersecretrequest";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Humanitec can be used to manage registry credentials. The Registry object represents how to match credentials to a particular registry.
 *
 * @remarks
 *
 * Humanitec supports all Docker compatible registries as well as the custom authentication formats used by AWS Elastic Container Registry and Google Container Registry. It also supports the injection of a specific secret to be copied from an existing namespace in the cluster.
 */
export class RegistryRequest extends SpeakeasyBase {
    /**
     * AccountCreds represents an account credentials (either, username- or token-based).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "creds" })
    @Type(() => AccountCredsRequest)
    creds?: AccountCredsRequest;

    /**
     * Indicates if registry secrets and credentials should be exposed to CI agents.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "enable_ci" })
    enableCi?: boolean;

    /**
     * Registry ID, unique within the Organization.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    /**
     * Registry name, usually in a "{domain}" or "{domain}/{project}" format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "registry" })
    registry: string;

    /**
     * ClusterSecretsMap stores a list of Kuberenetes secret references for the target deployment clusters.
     */
    @SpeakeasyMetadata({ elemType: ClusterSecretRequest })
    @Expose({ name: "secrets" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, ClusterSecretRequest> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], ClusterSecretRequest);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    secrets?: Record<string, ClusterSecretRequest>;

    /**
     * Registry type, describes the registry authentication method, and defines the schema for the credentials.
     *
     * @remarks
     *
     * Supported values:
     *
     * - `public`
     *
     * - `basic`
     *
     * - `google_gcr`
     *
     * - `amazon_ecr`
     *
     * - `secret_ref`
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type: string;
}
