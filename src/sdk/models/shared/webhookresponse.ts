/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventBaseResponse } from "./eventbaseresponse";
import { Expose, Type } from "class-transformer";

/**
 * Webhook is a special type of a Job, it performs a HTTPS request to a specified URL with specified headers.
 */
export class WebhookResponse extends SpeakeasyBase {
  /**
   * The timestamp of when this Job was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The user who created this Job
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_by" })
  createdBy?: string;

  /**
   * Defines whether this job is currently disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers: Record<string, any>;

  /**
   * Job ID, unique within the Organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payload" })
  payload: Record<string, any>;

  /**
   * A list of Events by which the Job is triggered
   */
  @SpeakeasyMetadata({ elemType: EventBaseResponse })
  @Expose({ name: "triggers" })
  @Type(() => EventBaseResponse)
  triggers: EventBaseResponse[];

  /**
   * Thw webhook's URL (without protocol, only HTTPS is supported)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
