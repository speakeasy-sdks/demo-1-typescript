/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetOrgsOrgIdArtefactsArtefactIdVersionsRequest extends SpeakeasyBase {
  /**
   * (Optional) Filter for non-archived Artefact Versions. If no filter is defined only non-archived Artefact Versions are returned, if the filter is true both archived and non-archived Versions are returned.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=archived",
  })
  archived?: string;

  /**
   * The Artefact ID.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=artefactId",
  })
  artefactId: string;

  /**
   * (Optional) Limit the number of versions returned by the endpoint.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * The organization ID.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=orgId",
  })
  orgId: string;

  /**
   * (Optional) Filter Artefact Versions by by name including a version or digest.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=reference",
  })
  reference?: string;
}

export class GetOrgsOrgIdArtefactsArtefactIdVersionsResponse extends SpeakeasyBase {
  /**
   * Returns all Versions of the specified Artefact.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata({ elemType: shared.ArtefactVersionResponse })
  artefactVersionResponses?: shared.ArtefactVersionResponse[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid inputs provided.
   *
   * @remarks
   *
   *
   */
  @SpeakeasyMetadata()
  humanitecErrorResponse?: shared.HumanitecErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
